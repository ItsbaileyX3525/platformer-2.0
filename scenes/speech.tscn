[gd_scene load_steps=6 format=3 uid="uid://cgntqku4tx218"]

[ext_resource type="Texture2D" uid="uid://djfgpkicthsxn" path="res://assets/Speech.png" id="1_a4dxl"]
[ext_resource type="Texture2D" uid="uid://c2arlclb0kqa6" path="res://assets/controls/RightArrow.png" id="2_886cf"]
[ext_resource type="AudioStream" uid="uid://npadeykvvwar" path="res://assets/audio/speaking.ogg" id="2_o56fu"]
[ext_resource type="Texture2D" uid="uid://drumdulhsys04" path="res://assets/SpeechTail.png" id="3_l804c"]

[sub_resource type="GDScript" id="GDScript_v1ssk"]
script/source = "extends MarginContainer

@onready var label := $MarginContainer/Label
@onready var timer := $LetterDisplayTimer
@onready var speak := $AudioStreamPlayer
@onready var nextIndicator: Sprite2D = $NinePatchRect/Control/NextIndicator

const MAX_WIDTH := 256

var text := \"\"
var letterIndex := 0
var isSpeech: bool
var volume: int

var letterTime := 0.09
var spaceTime := 0.09
var puncTime := 0.2

signal finishedDisplaying()

func displayText(textToShow: String,speechSfx, sfxVolume = 0) -> void:
	text = textToShow
	volume = sfxVolume
	label.text = textToShow
	if typeof(speechSfx) == TYPE_BOOL:
		isSpeech = false
	else:
		speak.stream = speechSfx
		speak.volume_db = volume
		isSpeech = true
	await resized
	custom_minimum_size.x = min(size.x, MAX_WIDTH)
	
	if size.x > MAX_WIDTH:
		label.autowrap_mode = TextServer.AUTOWRAP_WORD
		await resized
		await resized
		custom_minimum_size.y = size.y
		
	global_position.x -= size.x / 2
	global_position.y -= size.y + 24

	label.text = \"\"
	_displayLetter()
		
func _displayLetter() -> void:
	label.text += text[letterIndex]
	
	letterIndex += 1
	if letterIndex >= text.length():
		finishedDisplaying.emit()
		nextIndicator.visible=true
		return
	
	match text[letterIndex]:
		\"!\", \".\", \",\", \"?\":
			timer.start(puncTime)
		\" \":
			timer.start(spaceTime)
		_:
			timer.start(letterTime)
			
			if isSpeech:
				var newAudioPlayer := speak.duplicate()
				get_tree().root.add_child(newAudioPlayer)
				newAudioPlayer.play()
				await newAudioPlayer.finished
				newAudioPlayer.queue_free()

func _on_letter_display_timer_timeout() -> void:
	_displayLetter()
"

[node name="TextBox" type="MarginContainer"]
offset_right = 32.0
offset_bottom = 32.0
script = SubResource("GDScript_v1ssk")

[node name="NinePatchRect" type="NinePatchRect" parent="."]
layout_mode = 2
texture = ExtResource("1_a4dxl")
patch_margin_left = 16
patch_margin_top = 16
patch_margin_right = 16
patch_margin_bottom = 16

[node name="Control" type="Control" parent="NinePatchRect"]
layout_mode = 1
anchors_preset = 3
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 0
grow_vertical = 0

[node name="NextIndicator" type="Sprite2D" parent="NinePatchRect/Control"]
visible = false
position = Vector2(-5, -6)
texture = ExtResource("2_886cf")

[node name="Control2" type="Control" parent="NinePatchRect"]
layout_mode = 1
anchors_preset = 7
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
offset_left = 1.0
offset_right = 1.0
grow_horizontal = 2
grow_vertical = 0

[node name="Sprite2D" type="Sprite2D" parent="NinePatchRect/Control2"]
position = Vector2(-1, 3)
texture = ExtResource("3_l804c")

[node name="MarginContainer" type="MarginContainer" parent="."]
layout_mode = 2
theme_override_constants/margin_left = 8
theme_override_constants/margin_top = 8
theme_override_constants/margin_right = 8
theme_override_constants/margin_bottom = 8

[node name="Label" type="Label" parent="MarginContainer"]
layout_mode = 2
theme_override_colors/font_color = Color(0, 0, 0, 1)
vertical_alignment = 1

[node name="LetterDisplayTimer" type="Timer" parent="."]
one_shot = true

[node name="AudioStreamPlayer" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2_o56fu")

[connection signal="timeout" from="LetterDisplayTimer" to="." method="_on_letter_display_timer_timeout"]
